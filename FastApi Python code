from fastapi import FastAPI, HTTPException
from pydantic import BaseModel, EmailStr, Field
from email.message import EmailMessage
import smtplib
from dotenv import load_dotenv
from pathlib import Path
import os

dotenv_path = Path("C:/Users/user/OneDrive/İş masası/My/files/.env").resolve()
load_dotenv(dotenv_path=dotenv_path)

SMTP_USER = os.getenv("SMTP_USER")
SMTP_PASS = os.getenv("SMTP_PASS")
SMTP_HOST = os.getenv("SMTP_HOST")
SMTP_PORT = int(os.getenv("SMTP_PORT"))

app = FastAPI()

class EmailRequest(BaseModel):
    subject: str = Field(..., min_length=1, description="Email subject")
    message: str = Field(..., min_length=1, description="Message")
    receiver: EmailStr = Field(..., description="Recipient's email address")

@app.post("/send-email")
async def send_email(data: EmailRequest):
    msg = EmailMessage()
    msg["Subject"] = data.subject
    msg["From"] = f"MyApp<{SMTP_USER}>"
    msg["To"] = data.receiver
    msg.set_content(data.message)

    try:
        with smtplib.SMTP(SMTP_HOST, SMTP_PORT) as server:
            server.starttls()
            server.login(SMTP_USER, SMTP_PASS)
            server.send_message(msg)
        return {"message": "Email sent successfully"}
    except Exception as e:
        raise HTTPException(status_code=500, detail=f"An error occurred while sending the email: {str(e)}")
